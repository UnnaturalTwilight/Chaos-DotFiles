;; TESTING COPY OF BAR
(deflisten cavabars
  :initial "startup"
"scripts/cavaiguess")
;; Vars
(deflisten workspaces :initial "[]" "scripts/get-workspaces") ; | jq '[.[] | if .windows == 0 then empty end]'
(deflisten current_workspace :initial "1" "scripts/get-active-workspace")
(deflisten window :initial "..." "scripts/get-window-title 900") ; Jank cause I don't want to remove the title length liming feature. 0 = window class always displayed

(deflisten music :initial ""
"playerctl -a --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll dnd :interval "10s"
"dunstctl is-paused")

(defpoll bright :interval "1s"
"brightnessctl -m g")

(defpoll volume :interval "1s"
"scripts/getvol")

(defvar debug-buttons true)

(defpoll speaker_raw :interval "1s"
"pactl get-default-sink")

;; Widgets
(defwidget bar []
  (box :orientation "h" :space-evenly false :spacing 10 :class "mainbar" :hexpand true :halign "fill" :width 1700
    (status)
    (padding :space 20 :expand true)
    (music)
    (padding :space 20)
    (sidestuff)
  ))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :spacing 5 :halign "end"
    (metric :label "󰃟"
      :value {round((bright / 96000) * 100, 0)}
    :onchange "brightnessctl s {}% -n9600")
    (_volume :mute " "
      :low " " :high " "
      :value {round(volume * 100, 0)}
    :onchange "scripts/setvol {}")
    (_battery :status {EWW_BATTERY.BAT1.status}
      :charge "󰂄" :full "󰁹" :one "󰂂" :two "󰂁" :three "󰂀" :four "󰁿"
      :five "󰁾" :six "󰁽" :seven "󰁼" :eight "󰁻" :nine "󰁺" :low "󰂎"
    :value {EWW_BATTERY.BAT1.capacity})
    (alertmode)
    (button :onclick "${EWW_CMD} o start" (label :text {formattime(EWW_TIME, "%l:%M %b %d, %Y")}))))

(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly false
      :spacing 7
      (label :text "${workspaces} ${current_workspace}" :visible false)
      (for workspace in workspaces
        (tooltip (label :text "${workspace.id}" :class "tooltip" )
          (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
            (box :class "workspace-entry ${workspace.windows > 0 ? "occupied" : "empty"}"
              (label :text "" :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""}" )
            ))))
      (button :onclick "hyprctl dispatch togglespecialworkspace magic -q" "󱊇 ")
    )))

(defwidget status []
  (box :class "status"
    :orientation "h"
    :halign "fill"
    :space-evenly false
    :spacing 20
    (workspaces)
    (systray :orientation "h" :icon-size 16 :spacing 5)
    (label :text "${window}" :visible {window != ""} :truncate true)
  ))

(defwidget music []
  (box :class "music"
    :orientation "h"
    :space-evenly false
    :spacing 10
    :halign "end"
    :visible {music != ""}
    (button :onclick "playerctl previous" "󰑟" )
    (button :onclick "playerctl play-pause" "${music}")
    (button :onclick "playerctl next" "󰈑")
  ))

(defwidget metric [label value onchange]
  (tooltip (label :text {"${value}%"} :class "tooltip" )
    (box :orientation "h"
      :class "metric"
      :space-evenly false
      :spacing 1
      (label :text label)
      (scale :min 0
        :max 101
        :active {onchange != ""}
        :value value
      :onchange onchange))))

(defwidget _battery [status full one two three four five six seven eight nine low charge value]
  (tooltip (label :text {"${value}%"} :class "tooltip" )
    (box :class "metric"
      :space-evenly false
      :spacing -3
      (label :text {status == 'Charging' ? charge :
        value < 5 ? low :
        value < 15 ? nine :
        value < 25 ? eight :
        value < 35 ? seven :
        value < 45 ? six :
        value < 55 ? five :
        value < 65 ? four :
        value < 75 ? three :
        value < 85 ? two :
      value < 95 ? one : full})
      (scale :min 0
        :max 101
        :active false
      :value value))))

(defwidget _volume [value mute low high onchange]
  (tooltip :class "metric" (label :text { speaker_raw == "bluez_output.40_72_18_AD_77_86.1" ? "󰋋  ${value}" : "󰓃  ${value}"} :class "tooltip" )
    (box :class "metric"
      :space-evenly false
      :spacing -7
      (button :onclick "wpctl set-mute @DEFAULT_SINK@ toggle"
        :onrightclick { speaker_raw == "bluez_output.40_72_18_AD_77_86.1" ? "wpctl set-default 55 && hyprctl notify 1 2000 0 \"Switched to internal speakers\""
        : "wpctl set-default 67 && hyprctl notify 1 2000 0 \"Switched to bluetooth headphones\""}
      {value == 0 ? mute : value < 40 ? low : high})
      (scale :min 0
        :max 101
        :active {onchange != ""}
        :value value
      :onchange onchange))))

(defwidget alertmode []
  (box :class "toggle"
    :orientation "h"
    :space-evenly false
    :spacing 1
    (button :onclick "dunstctl set-paused toggle; ${EWW_CMD} poll dnd" { dnd == "false" ? " " : " "})
  ))

;; sidecars
(defwidget sys_sidecar []
  (box :class "debug" :orientation "h" :space-evenly false :spacing 10 :halign "start" :class "mainbar"
    (tooltip (label :class "tooltip" :text {"Kill: ${EWW_CMD}"})
      (button :onclick "${EWW_CMD} kill" "󰅜"))
    (tooltip (sys) (label :text "sys" :truncate true))
    (button :onclick "${EWW_CMD} o activate-linux --duration 90s" "󰡃")
  ))

(defwidget pow_sidecar []
  (box :class "debug" :orientation "h" :space-evenly false :spacing 10 :halign "end" :class "mainbar"
    (button :onclick "scripts/launch-start" "")
    (button :onclick "${EWW_CMD} c start" "󰅜")
    (button :onclick "zsh | hyprlock" "")
  ))

;; Window
(defwindow bar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "0%"
    :y "5px"
    :width "97%"
    :height "32px"
  :anchor "top center")
  :focusable false
  (centerbox :orientation "h" :space-evenly false (sys_sidecar)(bar)(pow_sidecar)))

(defwindow sys_sidecar
  :monitor 0
  :exclusive false
  :geometry (geometry :x "0%" :y "5px"
    :width "5%" :height "10px"
  :anchor "top left")
  :focusable false
  (sys_sidecar))

(defwindow pow_sidecar
  :monitor 0
  :exclusive false
  :geometry (geometry :x "0%" :y "5px"
    :width "5%" :height "32px"
  :anchor "top right")
  :focusable false
  (pow_sidecar))